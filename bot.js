const qrcode = require('qrcode-terminal');
const { Client } = require('whatsapp-web.js');
const client = new Client();

client.on('qr', qr => {
    qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
    console.log('WhatsApp est√° conectado');
});

client.initialize();

// Vari√°veis de estado para rastrear a etapa atual, o atendimento do usu√°rio e o estado da aplica√ß√£o
const userState = {};
const userInAtendimento = {};
let isPaused = false;

client.on('message', async (message) => {
    if (message.body && !message.isGroupMsg) {
        const phone = message.from;
        if (userInAtendimento[phone]) {
            // Atendimento em andamento pelo atendente
            if (message.body.includes('Obrigado pelo contato, estamos √† disposi√ß√£o')) {
                // O atendente encerrou a conversa
                userInAtendimento[phone] = false;
                isPaused = false; // Definir isPaused como false para retomar a aplica√ß√£o
                userState[phone] = undefined;
                await sendWelcomeMessage(message);
                return;
            } else {
                // Atendimento em andamento, encaminhar mensagem para o atendente
                // ...
                return;
            }
        } else if (!userState[phone]) {
            // Primeira mensagem do usu√°rio, fornecer as op√ß√µes
            userState[phone] = 'waitingForOption';
            await sendWelcomeMessage(message);
        } else if (isPaused) {
            // Aplica√ß√£o pausada aguardando atendente
            await client.sendMessage(phone, 'Aguarde um momento, estamos transferindo voc√™ para um atendente.');
        } else {
            const escolhaOpcao = message.body;
            let response;
            if (userState[phone] === 'waitingForOption') {
                if (escolhaOpcao === '1') {
                    response = 'Se voc√™ trouxe seu aparelho para um or√ßamento deixe seu nome e retornaremos em breve. üòâ';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else if (escolhaOpcao === '2') {
                    userState[phone] = 'iptvSubMenu';
                    response = 'Escolha uma das op√ß√µes do submenu IPTV:\n' +
                        '1Ô∏è‚É£ Instala√ß√£o\n' +
                        '2Ô∏è‚É£ Configura√ß√£o\n' +
                        '3Ô∏è‚É£ Falta de Sinal';
                } else if (escolhaOpcao === '3') {
                    response = 'Estamos localizados na Av Lucia Helena Gon√ßalves Viana, 916. üìç';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else if (escolhaOpcao === '4') {
                    response = 'Temos os seguintes aparelhos a pronta entrega: [...]. üëç';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else if (escolhaOpcao === '5') {
                    response = 'Deixe seu nome completo e CPF que lhe enviaremos o comprovante de garantia. üìÑ';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else if (escolhaOpcao === '6') {
                    response = 'Aguarde um momento, estamos transferindo voc√™ para um atendente.';
                    // Pausar a aplica√ß√£o
                    isPaused = true;
                    // Encerrar a sess√£o
                    client.sendMessage(phone, response);
                    client.deleteChat(phone);
                } else {
                    // Op√ß√£o inv√°lida
                    response = 'Op√ß√£o inv√°lida. Por favor, escolha uma das op√ß√µes v√°lidas. üòï';
                    await message.reply(response);
                    return await sendWelcomeMessage(message);
                }
            } else if (userState[phone] === 'iptvSubMenu') {
                if (escolhaOpcao === '1') {
                    response = 'Passo a Passo para sua Instala√ß√£o: [.....]';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else if (escolhaOpcao === '2') {
                    response = 'Passo a Passo para configurar seu IPTV: [.....]';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else if (escolhaOpcao === '3') {
                    response = 'Sua mensagem foi registrada, entraremos em contato em breve.';
                    userState[phone] = undefined; // Reiniciar o c√≥digo
                } else {
                    // Op√ß√£o inv√°lida
                    response = 'Op√ß√£o inv√°lida. Por favor, escolha uma das op√ß√µes v√°lidas do submenu IPTV. üòï';
                    await message.reply(response);
                    return await sendWelcomeMessage(message);
                }
            }

            await message.reply(response);
        }
    }
});

async function sendWelcomeMessage(message) {
    const welcomeMessage = 'Brothers eletr√¥nica agradece seu contato, em que posso ajudar? üòâ\n' +
        '1Ô∏è‚É£ OR√áAMENTO\n' +
        '2Ô∏è‚É£ IPTV\n' +
        '3Ô∏è‚É£ ENDERE√áO\n' +
        '4Ô∏è‚É£ COMPRA\n' +
        '5Ô∏è‚É£ GARANTIA\n' +
        '6Ô∏è‚É£ FALAR COM ATENDENTE';

    const optionsMessage = await message.reply(welcomeMessage);
    console.log('Mensagem enviada com op√ß√µes:', optionsMessage.body);
}
